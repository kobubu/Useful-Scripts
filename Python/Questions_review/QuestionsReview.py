# –ò–º–ø–æ—Ä—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ Python
import hashlib  # –ú–æ–¥—É–ª—å –¥–ª—è —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è SHA-256)
import requests  # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤ (–∫ API Ollama)
import datetime  # –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º (–¥–ª—è –ª–æ–≥–æ–≤)
from pathlib import Path  # –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –û–û–ü-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—É—Ç—è–º–∏ —Ñ–∞–π–ª–æ–≤
from typing import Dict, Any  # –ê–Ω–Ω–æ—Ç–∞—Ü–∏–∏ —Ç–∏–ø–æ–≤ –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–¥–∞
from google.oauth2 import service_account  # –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è Google —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç
from googleapiclient.discovery import build  # –ö–ª–∏–µ–Ω—Ç Google API
import sys  # –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è stdout/stderr)

# ====================== CONFIG ======================

# –°–ª–æ–≤–∞—Ä—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ)
CONFIG = {
    # –ü—É—Ç—å –∫ JSON-—Ñ–∞–π–ª—É —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ Google
    "service_account_file": "[]",

    # –ö–æ–Ω—Ñ–∏–≥ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã "–ú–∞—Å—Ç–µ—Ä—Ñ–∞–π–ª"
    "masterfile": {
        "spreadsheet_id": "[]",  # ID –≤ URL —Ç–∞–±–ª–∏—Ü—ã
        "sheet_name": "–ú–∞—Å—Ç–µ—Ä—Ñ–∞–π–ª",  # –ù–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ
    },
    # –ö–æ–Ω—Ñ–∏–≥ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã "–ú–∞—Å—Ç–µ—Ä–≤–æ–ø—Ä–æ—Å–Ω–∏–∫"
    "questionnaire": {
        "spreadsheet_id": "[]",  # ID —Ç–∞–±–ª–∏—Ü—ã
        "sheet_name": "[]",  # –ù–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞
    },
    # –û–±–ª–∞—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–∞ Google API (—Ç–æ–ª—å–∫–æ –∫ —Ç–∞–±–ª–∏—Ü–∞–º)
    "scopes": [""],
    # URL –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ Ollama
    "ollama_url": "",
    # –ù–∞–∑–≤–∞–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–π –º–æ–¥–µ–ª–∏ (qwen2.5 32B –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤)
    "ollama_model": ""
}

# –®–∞–±–ª–æ–Ω –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è LLM —Å –¥–≤—É–º—è –ø—Ä–∏–º–µ—Ä–∞–º–∏ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ –≤—ã–≤–æ–¥–∞
BASE_PROMPT = '''
You receive a translator-reviewer discussion. Please follow these 2 examples

[—Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø—Ä–æ–º–ø—Ç–∞ —Å–æ–∫—Ä–∞—â–µ–Ω–æ –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏]
'''

# ====================== CLASSES ======================

# –ö–ª–∞—Å—Å-–∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Google Sheets API
class GoogleSheetClient:
    # –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞ (–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞)
    def __init__(self, creds_path: str, scopes: list):
        # –ó–∞–≥—Ä—É–∑–∫–∞ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON-—Ñ–∞–π–ª–∞
        self.creds = service_account.Credentials.from_service_account_file(
            creds_path, 
            scopes=scopes
        )
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ Google Sheets API v4
        self.service = build('sheets', 'v4', credentials=self.creds)
        # –°–æ–∫—Ä–∞—â–µ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ—Å—É—Ä—Å spreadsheets
        self.sheet = self.service.spreadsheets()

    # –ú–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∫–æ–ª–æ–Ω–∫–∏
    def get_column(self, spreadsheet_id: str, sheet_name: str, range_suffix: str):
        # –í—ã–∑–æ–≤ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π
        result = self.sheet.values().get(
            spreadsheetId=spreadsheet_id,  # ID —Ç–∞–±–ª–∏—Ü—ã
            range=f"{sheet_name}!{range_suffix}"  # –î–∏–∞–ø–∞–∑–æ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä "A2:A")
        ).execute()
        # –í–æ–∑–≤—Ä–∞—Ç –∑–Ω–∞—á–µ–Ω–∏–π –∏–ª–∏ –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞
        return result.get('values', [])

    # –ú–µ—Ç–æ–¥ –ø–∞–∫–µ—Ç–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —è—á–µ–µ–∫
    def batch_update(self, spreadsheet_id: str, updates: list):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –µ—Å—Ç—å —á—Ç–æ –æ–±–Ω–æ–≤–ª—è—Ç—å
        if updates:
            # –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –∫ API
            body = {
                "valueInputOption": "RAW",  # –ë–µ–∑ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π
                "data": updates  # –°–ø–∏—Å–æ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
            }
            # –í—ã–∑–æ–≤ API –¥–ª—è –ø–∞–∫–µ—Ç–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            self.sheet.values().batchUpdate(
                spreadsheetId=spreadsheet_id, 
                body=body
            ).execute()

    # –ú–µ—Ç–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–¥–Ω–æ–π —è—á–µ–π–∫–∏
    def update_cell(self, spreadsheet_id: str, sheet_name: str, cell: str, value: str):
        # –í—ã–∑–æ–≤ API –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è
        self.sheet.values().update(
            spreadsheetId=spreadsheet_id,
            range=f"{sheet_name}!{cell}",  # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —è—á–µ–π–∫–∏
            valueInputOption="RAW",  # –°—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
            body={"values": [[value]]}  # –î–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Google Sheets API
        ).execute()

# –ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Ollama API
class OllamaClient:
    # –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä (–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è)
    def __init__(self, url: str, model: str):
        self.url = url  # URL API endpoint
        self.model = model  # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –º–æ–¥–µ–ª–∏

    # –ú–µ—Ç–æ–¥ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞
    def generate_summary(self, prompt: str) -> str:
        # POST-–∑–∞–ø—Ä–æ—Å –∫ API Ollama
        response = requests.post(
            self.url,
            json={
                "model": self.model,  # –£–∫–∞–∑–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏
                "prompt": prompt,  # –¢–µ–∫—Å—Ç –ø—Ä–æ–º–ø—Ç–∞
                "stream": False  # –ù–µ –ø–æ—Ç–æ–∫–æ–≤—ã–π –æ—Ç–≤–µ—Ç
            },
            timeout=60  # –¢–∞–π–º–∞—É—Ç 60 —Å–µ–∫—É–Ω–¥
        )
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–≤–µ—Ç–∞
        response.raise_for_status()
        # –í–æ–∑–≤—Ä–∞—Ç —Ç–µ–∫—Å—Ç–∞ –æ—Ç–≤–µ—Ç–∞
        return response.json()["response"]

# ====================== MAIN LOGIC ======================

# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ª–∏—Å—Ç–∞ "–ú–∞—Å—Ç–µ—Ä—Ñ–∞–π–ª"
def summarize_masterfile(sheet_client: GoogleSheetClient, ollama: OllamaClient):
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–æ–≥
    print(f"\nüìò –û–±—Ä–∞–±–æ—Ç–∫–∞ –ú–∞—Å—Ç–µ—Ä—Ñ–∞–π–ª–∞...")
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ ID —Ç–∞–±–ª–∏—Ü—ã –∏ –∏–º–µ–Ω–∏ –ª–∏—Å—Ç–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
    spreadsheet_id = CONFIG["masterfile"]["spreadsheet_id"]
    sheet_name = CONFIG["masterfile"]["sheet_name"]

    # –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç—Ä–µ—Ö –∫–æ–ª–æ–Ω–æ–∫:
    a_values = sheet_client.get_column(spreadsheet_id, sheet_name, "A2:A")  # –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
    b_values = sheet_client.get_column(spreadsheet_id, sheet_name, "B2:B")  # –°—Ç–∞—Ç—É—Å (Fixed/–Ω–µ—Ç)
    h_values = sheet_client.get_column(spreadsheet_id, sheet_name, "H2:H")  # Summary (—Ä–µ–∑—É–ª—å—Ç–∞—Ç)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä–æ–∫ (–Ω–∞—á–∏–Ω–∞—è —Å–æ 2-–π, —Ç–∞–∫ –∫–∞–∫ 1-—è - –∑–∞–≥–æ–ª–æ–≤–æ–∫)
    for i in range(2, max(len(a_values), len(b_values), len(h_values)) + 2):
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ
        a_row = a_values[i-2][0].strip() if i-2 < len(a_values) and a_values[i-2] else ''
        b_row = b_values[i-2][0].strip() if i-2 < len(b_values) and b_values[i-2] else ''
        h_row = h_values[i-2][0].strip() if i-2 < len(h_values) and h_values[i-2] else ''

        # –ü—Ä–æ–ø—É—Å–∫ –µ—Å–ª–∏: –Ω–µ—Ç –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞, –Ω–µ—Ç —Å—Ç–∞—Ç—É—Å–∞ –∏–ª–∏ —É–∂–µ –µ—Å—Ç—å summary
        if not a_row or not b_row or h_row:
            continue

        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω—É–∂–¥–∞–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç –≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏
        needs_correction = 'true' if b_row.lower() == 'fixed' else 'false'
        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è LLM
        prompt = f"{BASE_PROMPT}\n\"{a_row}\"\n\nExpected summary (needs_correction = {needs_correction}):"

        try:
            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏
            print(f"üß† –°—Ç—Ä–æ–∫–∞ {i}...")
            # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è summary —á–µ—Ä–µ–∑ LLM
            summary = ollama.generate_summary(prompt)
            # –ó–∞–ø–∏—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ –∫–æ–ª–æ–Ω–∫—É H
            sheet_client.update_cell(spreadsheet_id, sheet_name, f"H{i}", summary)
            # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
            print(f"‚úÖ –ó–∞–ø–∏—Å–∞–Ω–æ –≤ H{i}")
        except Exception as e:
            # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ {i}: {e}")

# –§—É–Ω–∫—Ü–∏—è —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤
def hash_questionnaire(sheet_client: GoogleSheetClient):
    print(f"\nüìò –û–±—Ä–∞–±–æ—Ç–∫–∞ –ú–∞—Å—Ç–µ—Ä–≤–æ–ø—Ä–æ—Å–Ω–∏–∫–∞...")
    # –ü–æ–ª—É—á–µ–Ω–∏–µ ID —Ç–∞–±–ª–∏—Ü—ã –∏ –∏–º–µ–Ω–∏ –ª–∏—Å—Ç–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
    spreadsheet_id = CONFIG["questionnaire"]["spreadsheet_id"]
    sheet_name = CONFIG["questionnaire"]["sheet_name"]

    # –ß—Ç–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫ (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ 1000 —Å—Ç—Ä–æ–∫):
    a_values = sheet_client.get_column(spreadsheet_id, sheet_name, "A2:A1000")  # –¢–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞
    i_values = sheet_client.get_column(spreadsheet_id, sheet_name, "I2:I1000")  # –•–µ—à

    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–ø–∏—Å–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    updates = []
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞—Ä —Å—Ç—Ä–æ–∫ (–≤–æ–ø—Ä–æ—Å + —Ö–µ—à)
    for idx, (a_row, i_row) in enumerate(zip(a_values, i_values), start=2):
        # –ü—Ä–æ–ø—É—Å–∫ –ø—É—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
        if not a_row or not a_row[0].strip():
            break
        # –ü—Ä–æ–ø—É—Å–∫ –µ—Å–ª–∏ —Ö–µ—à —É–∂–µ –µ—Å—Ç—å
        if i_row and i_row[0].strip():
            continue

        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤–æ–ø—Ä–æ—Å–∞
        text = a_row[0]
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SHA-256 —Ö–µ—à–∞
        hash_val = hashlib.sha256(text.encode('utf-8')).hexdigest()
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
        updates.append({
            "range": f"{sheet_name}!I{idx}",  # –Ø—á–µ–π–∫–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            "values": [[hash_val]]  # –ó–Ω–∞—á–µ–Ω–∏–µ —Ö–µ—à–∞
        })

    # –ú–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –µ—Å–ª–∏ –µ—Å—Ç—å —á—Ç–æ –æ–±–Ω–æ–≤–ª—è—Ç—å
    if updates:
        sheet_client.batch_update(spreadsheet_id, updates)
        print(f"üîê –û–±–Ω–æ–≤–ª–µ–Ω–æ {len(updates)} —Ö—ç—à–µ–π.")
    else:
        print("‚ÑπÔ∏è –ù–µ—Ç —Ö—ç—à–µ–π –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.")

# ====================== ENTRY ======================

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    # –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î_–ß–ß-–ú–ú-–°–°
    timestamp = datetime.datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
    # –ü—É—Ç—å –∫ –ª–æ–≥-—Ñ–∞–π–ª—É (–≤ —Ç–æ–π –∂–µ –ø–∞–ø–∫–µ —á—Ç–æ –∏ —Å–∫—Ä–∏–ø—Ç)
    log_path = Path(__file__).parent / "last_run.log"
    
    # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≤–æ–¥–∞ –≤ –ª–æ–≥-—Ñ–∞–π–ª
    with open(log_path, "w") as log_file:
        sys.stdout = log_file  # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ stdout
        sys.stderr = log_file  # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ stderr

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≤ –ª–æ–≥–µ
        print(f"\n=== üöÄ –ó–∞–ø—É—Å–∫ {datetime.datetime.now()} ===")
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ Google Sheets
        sheet_client = GoogleSheetClient(CONFIG["service_account_file"], CONFIG["scopes"])
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ Ollama
        ollama = OllamaClient(CONFIG["ollama_url"], CONFIG["ollama_model"])

        # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
        summarize_masterfile(sheet_client, ollama)  # –ê–Ω–∞–ª–∏–∑ –æ–±—Å—É–∂–¥–µ–Ω–∏–π
        hash_questionnaire(sheet_client)  # –•–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤

# –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ Python
if __name__ == "__main__":
    main()
